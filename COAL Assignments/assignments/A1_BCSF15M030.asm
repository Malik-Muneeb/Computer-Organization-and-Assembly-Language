.MODEL SMALL
.STACK 100H
.DATA
	PROMPT1 DB 10,13,"			REPLICA OF DUMP COMMAND$"
	PROMPT2 DB 10,13,"-d$"
	NEWLINE DB 10,13,"$"
.CODE
.386
MAIN PROC
	MOV AX,@DATA
	MOV DS,AX
	
	LEA DX,PROMPT1
	MOV AH,09H
	INT 21H
	
	LEA DX,PROMPT2
	MOV AH,09H
	INT 21H
	
	LEA DX,NEWLINE
	MOV AH,09H
	INT 21H
	
	
	;STORE REQUIRED STARTING OFFSET ADDRESS
	MOV SI,0100H
	MOV CX,8		;TOTAL EIGHT LINES
	
	;MAIN LOOP PRINTS 8 LINES
MAIN_LOOP:

	PUSH CX			;SAVE COUNTER FOR MAIN_LOOP. CX MAY ALSO BS USE FOR INTERNAL LOOPS
	
	;STORE REQUIRED SEGMENT ADDRESS
	MOV BX,073FH
	MOV DS,BX	
	
	;PRINT SEGMENT ADDRESS
	MOV CX,4				;CX HAS 4 TO OUTPUT FOUR HEXA DIGIT
	PUSH CX					;PASSING PARAMETER
	PUSH BX					;PASSING PARAMETER
	CALL HEXAOUT
	
	;PRINT COLON
	MOV DL,":"
	MOV AH,02H
	INT 21H
	
	;PRINT OFFSET ADDRESS
	MOV CX,4				;CX HAS 4 TO OUTPUT FOUR HEXA DIGIT
	PUSH CX					;PASSING PARAMETER
	PUSH SI					;PASSING PARAMETER
	CALL HEXAOUT
	
	;PRINT TWO SPACES
	MOV DL," "
	MOV AH,02H
	INT 21H
	
	MOV DL," "
	MOV AH,02H
	INT 21H

	PUSH SI			;SAVE STARTING OFFSET TO PRINT ASCII
	MOV CX,17		;COUNTER FOR 16 BYTES AND ONE HYPHON
	
	DEC SI	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	;PRINT CONTENTS OF SI
PRINT_CONTENTS:
	CMP CX,09
	JE HYPHON
	
	MOV AX,[SI]
	
	PUSH CX					;SAVE FOR LAST COUNTER
	MOV CX,2				;CX HAS 2 TO OUTPUT TWO HEXA DIGIT
	PUSH CX					;PASSING PARAMETER
	PUSH AX					;PASSING PARAMETER
	CALL HEXAOUT
	POP CX					;RESTORE VALUE FOR LAST COUNTER
	
	INC SI
	
	;PRINT SPACE
	MOV DL," "
	MOV AH,02H
	INT 21H
	
	JMP INCREMENT_SI
	
HYPHON:

	;PRINT BACKSPACE
	MOV DL,8H	
	MOV AH,02H
	INT 21H
	
	;PRINT HYPHON
	MOV DL,"-"		
	MOV AH,02H
	INT 21H
	
INCREMENT_SI:
	LOOP PRINT_CONTENTS
	
	;PRINT THREE SPACES
	MOV DL," "
	MOV AH,02H
	INT 21H
	
	MOV DL," "
	MOV AH,02H
	INT 21H
	
	MOV DL," "
	MOV AH,02H
	INT 21H
	
	POP SI			;POP STARTING OFFSET ADDRESS
	PUSH SI			;SAVE SI FOR INCREMENT 16 BYTES MANUALLY
	MOV CX,16		;COUNTER FOR PRINT ASCII
	
	;PRINT ASCII OF CONTENTS OF SI
PRINT_ASCII:	
	MOV DL,[SI]
	CMP DL,20H
	JB DOT
	CMP DL,7EH
	JA DOT
	MOV AH,02H
	INT 21H
	JMP ITERATE_ASCII
	
DOT:
	MOV DL,'.'
	MOV AH,02H
	INT 21H
	
ITERATE_ASCII:	
	INC SI
	LOOP PRINT_ASCII
	
	;INITIALIZE DATA SEGMENT IN WHICH NEWLNE IS DEFINE
	MOV AX,@DATA
	MOV DS,AX
	
	LEA DX,NEWLINE
	MOV AH,09H 
	INT 21H
	
	
	POP SI			;STARTING OFFSET ADDRESS OF SI OF PARTICULAR LINE	
	ADD SI,16		;INCREMENT 16 TO JUMP NEXT STARTING OFFSET OF SI
	
	POP CX			;COUNTER FOR MAIN_LOOP
	DEC CX			;DECREMENT FOR COUNTER OF MAIN LOOP
	JNZ MAIN_LOOP
	
	MOV AH,4CH
	INT 21H
MAIN ENDP

;HEXA OUTPUT START
;THIS FUNCTION GETS TWO PARAMATER
;ONE HAS HEXA VALUE OTHER ONE TO SELECT DIGITS OF HEXA OUTPUT
HEXAOUT PROC
	PUSH AX
	PUSH BX
	PUSH CX
	PUSH DX
	PUSH BP
	MOV BP,SP
	MOV BX,[BP+12]
	MOV CX,[BP+14]

HEXAOUT_AGAIN:	
	MOV DL,BH
	SHR DL,4
	ROL BX,4
	CMP DL,0
	JB HEXAOUT_LETTER
	CMP DL,9
	JA HEXAOUT_LETTER

	ADD DL,30H
	JMP HEXAOUT_PRINT
HEXAOUT_LETTER:
	ADD DL,37H
	
HEXAOUT_PRINT:
	MOV AH,02
	INT 21H
	LOOP HEXAOUT_AGAIN
	
	POP BP
	POP DX
	POP CX
	POP BX
	POP AX
	RET 4
HEXAOUT ENDP
;HEXA OUTPUT END

END MAIN