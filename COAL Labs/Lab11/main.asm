.MODEL SMALL
.STACK 100H
.DATA
	PROMPT1 DB "Enter first string: $"
	PROMPT2 DB "The string is: $"
	PROMPT3 DB "Size of string: $"
	PROMPT4 DB "Enter second string: $"
	GREATER DB "First string is greater than second.$"
	LESS DB "First string is smaller than second.$"
	EQUAL DB "Both strings are equal.$"
	SUBSTRING_YES DB "Second string is the substring of first.$"
	SUBSTRING_NOT DB "Second string is not the substring of first.$"
	NEWLINE DB 10,13,"$"
	ARR1 DB 100 DUP(0)
	ARR2 DB 100 DUP(0)
	
INCLUDE CSTRING.ASM	
.CODE
MAIN PROC 
	MOV AX,@DATA
	MOV DS,AX
	
	;INPUT MESSESGE
	LEA DX,PROMPT1
	MOV AH,09H
	INT 21H
	
	;INPUT
	LEA BX,ARR1
	PUSH BX
	MOV CX,99D
	PUSH CX
	CALL STRINP
	
	;NEWLINE
	LEA DX,NEWLINE
	MOV AH,09H
	INT 21H
	
	;OUTPUT MESSESGE
	LEA DX,PROMPT2
	MOV AH,09H
	INT 21H
	
	;OUTPUT
	LEA BX,ARR1
	PUSH BX
	MOV CX,99D
	PUSH CX
	CALL STROUT
	
	;NEWLINE
	LEA DX,NEWLINE
	MOV AH,09H
	INT 21H
	
	;SIZE MESSESGE
	LEA DX,PROMPT3
	MOV AH,09H
	INT 21H
	
	;LENGTH
	LEA SI,ARR1
	PUSH SI
	CALL STRLEN
	MOV AH,02
	MOV DL,BL
	ADD DL,30H
	INT 21H
	
	;NEWLINE
	LEA DX,NEWLINE
	MOV AH,09H
	INT 21H
	
	;INPUT MESSESGE
	LEA DX,PROMPT4
	MOV AH,09H
	INT 21H
	
	;INPUT STRING 2
	LEA BX,ARR2
	PUSH BX
	MOV CX,99D
	PUSH CX
	CALL STRINP
	
	;NEWLINE
	LEA DX,NEWLINE
	MOV AH,09H
	INT 21H
	
	;COMPARE
	LEA SI,ARR1
	LEA DI,ARR2
	PUSH SI
	PUSH DI
	CALL STRCMP
	
	CMP AL,0H
	JG GREATER_MSG
	CMP AL,0H
	JL LESS_MSG
	
	;EQUAL CASE
	LEA DX,EQUAL
	MOV AH,09H
	INT 21H
	JMP MAIN_REMAIN
	
LESS_MSG:
	LEA DX,LESS
	MOV AH,09H
	INT 21H
	JMP MAIN_REMAIN
	
GREATER_MSG:
	LEA DX,GREATER
	MOV AH,09H
	INT 21H
	
MAIN_REMAIN:
	
	;NEWLINE
	LEA DX,NEWLINE
	MOV AH,09H
	INT 21H
	
	;CHECK SUBSTRING
	LEA SI,ARR1
	LEA DI,ARR2
	PUSH SI
	PUSH DI
	CALL SUBSTRING
	
	CMP AL,0
	JE NOT_SUBSTRING
	
	LEA DX,SUBSTRING_YES
	MOV AH,09H
	INT 21H
	JMP MAIN_REMAIN_2
	
NOT_SUBSTRING:
	LEA DX,SUBSTRING_NOT
	MOV AH,09H
	INT 21H
	
MAIN_REMAIN_2:	
	MOV AH,4CH 
	INT 21H
MAIN ENDP	
END MAIN