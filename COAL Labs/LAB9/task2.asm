.MODEL SMALL
.STACK 100H
.DATA
        PROMPT1 DB 10,13, "Enter first string: $ "
        PROMPT2 DB 10,13, "Enter second string: $ "
        PROMPT3 DB 10,13, "First is smaller than second. $"
        PROMPT4 DB 10,13, "First is greater than second. $"
		PROMPT5 DB 10,13, "Both strings are equal. $"
		ARR1 DB 100 DUP(?)
		ARR2 DB 100 DUP(?)
		LEN1 DB 0
		LEN2 DB 0
.CODE
MAIN PROC
    MOV AX,@DATA
    MOV DS,AX
    
	LEA DX,PROMPT1
	MOV AH,09
	INT 21H
	
	MOV SI,OFFSET ARR1
	MOV BP,OFFSET LEN1
	CALL STRINP	
	
	LEA DX,PROMPT2
	MOV AH,09
	INT 21H
	
	MOV SI,OFFSET ARR2
	MOV BP,OFFSET LEN2
	CALL STRINP
	
	CALL STRCMP
	
	CMP AL,0
	JG GREATER
	JL LESS
	
	MOV DX,OFFSET PROMPT5
	MOV AH,09
	INT 21H
	JMP REMAIN2
	
GREATER:
	MOV DX,OFFSET PROMPT4
	MOV AH,09
	INT 21H
	JMP REMAIN2
	
LESS:
	MOV DX,OFFSET PROMPT3
	MOV AH,09
	INT 21H
	
REMAIN2:
	MOV AH,4CH
	INT 21H
		
MAIN ENDP

STRINP PROC
	
	MOV CX,99
INPUT1:		
	MOV AH,01
	INT 21H
	CMP AL,13
	JE REMAIN1
	CMP AL,'a'
	JAE ABOVE
	JMP STORE
ABOVE:
	cmp AL,'z'
	JBE CONVERT
	JMP STORE
CONVERT:
	SUB AL,32D
STORE:
	MOV [SI],AL
	INC SI
	INC BP
	LOOP INPUT1
REMAIN1:
	RET
STRINP ENDP

STRCMP PROC
	MOV BL,LEN1
	CMP BL,LEN2
	JNE NOTEQUAL
	
	MOV SI,OFFSET ARR1
	MOV DI,OFFSET ARR2
	MOV CL,LEN1
COMPARE:
	MOV BL,[SI]
	MOV BH,[DI]
	CMP BL,BH
	JNE NOTEQUAL
	INC SI
	INC DI
	LOOP COMPARE
	
	MOV AL,0
	JMP TERMINATE
NOTEQUAL:
	MOV BL,[SI]
	MOV DL,[DI]
	CMP BL,DL 
	JL LESS
GREATER:
	MOV AL,1
	JMP TERMINATE
LESS:
	MOV AL,-1

TERMINATE:
	RET
STRCMP ENDP
END MAIN